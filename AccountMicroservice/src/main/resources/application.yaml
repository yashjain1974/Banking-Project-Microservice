# src/main/resources/application.yml (Account Microservice)

spring:
  application:
    name: account-service

  datasource:
    url: jdbc:oracle:thin:@localhost:1521/ACCOUNT_PDB
    username: ACCOUNT_MS
    password: account123
    driver-class-name: oracle.jdbc.OracleDriver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.OracleDialect

  security: # <--- ADD THIS SECTION FOR SECURITY CONFIGURATION
    oauth2:
      resourceserver:
        jwt:
          # This is the URL where Keycloak exposes its public keys (JWKS endpoint).
          # Spring Security will use this to validate the signature of incoming JWTs.
          # Replace 8080 with your Keycloak port, bank-realm with your realm name.
          jwk-set-uri: http://localhost:8080/realms/bank-realm/protocol/openid-connect/certs
          # Alternatively, you can use issuer-uri if you prefer. Spring will discover JWKS from here.
          # issuer-uri: http://localhost:8080/realms/bank-realm

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ # Point to your Eureka Server's URL
    register-with-eureka: true
    fetch-registry: true
  instance:
    preferIpAddress: true # Optional: Good for containerized environments

server:
  port: 8003

logging:
  level:
    org:
      springframework:
        web: DEBUG
      hibernate: ERROR
      io.github.resilience4j: DEBUG # Enable Resilience4j logging for better visibility
      org.springframework.security: DEBUG # Enable detailed Spring Security logging
      org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG # Log incoming requests
      org.hibernate.SQL: DEBUG # Log Hibernate generated SQL
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE # Log SQL parameter binding

# Resilience4j Configuration for Account Service
resilience4j:
  circuitbreaker:
    configs:
      default: # Default configuration applied to all circuit breakers unless overridden
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        recordExceptions:
          - org.springframework.web.client.HttpClientErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
        ignoreExceptions: # Specific business exceptions that should not open the circuit
          - com.accountMicroservice.exception.AccountNotFoundException
          - com.accountMicroservice.exception.InsufficientFundsException
    instances:
      userService: # Circuit breaker for User Service Feign client
        baseConfig: default

  retry:
    configs:
      default: # Default retry configuration
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.HttpServerErrorException # Retry on 5xx errors
        ignoreExceptions: # Exceptions that do NOT trigger a retry
          - org.springframework.web.client.HttpClientErrorException # Do not retry on 4xx errors
          - com.accountMicroservice.exception.AccountNotFoundException
          - com.accountMicroservice.exception.InsufficientFundsException
    instances:
      userService: # Retry for User Service Feign client
        baseConfig: default
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: "*"
  endpoint:
    prometheus:
      enabled: true
    metrics:
      enabled: true
